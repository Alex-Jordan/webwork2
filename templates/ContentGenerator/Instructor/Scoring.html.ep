% use WeBWorK::Utils::Files qw(readFile);
% use WeBWorK::Utils::Sets qw(format_set_name_display);
%
% unless ($authz->hasPermissions(param('user'), 'access_instructor_tools')) {
	<div class="alert alert-danger p-1 mb-0">
		<%= maketext('You are not authorized to access instructor tools.') =%>
	</div>
	% last;
% }
%
% unless ($authz->hasPermissions(param('user'), 'score_sets')) {
	<div class="alert alert-danger p-1 mb-0"><%= maketext('You are not authorized to score sets.') %></div>
	% last;
% }
%
% my $scoringDir = $ce->{courseDirs}{scoring};
% $c->stash->{footerWidthClass} = 'col-md-12 col-lg-10 col-xl-8';
%
<div class="row">
	<div class="col-md-12 col-lg-10 col-xl-8">
		<div class="border border-dark p-2">
			<%= form_for current_route, name => 'scoring-form', id => 'scoring-form', method => 'POST', begin =%>
				<%= $c->hidden_authen_fields =%>
				<%= hidden_field returning => 1 =%>
				<div class="row">
					<div class="col-sm-6 mb-2">
						<%= label_for selectedSet => maketext('Selected sets:'), class => 'form-label' =%>
						<%= select_field selectedSet =>
								[ map { [ format_set_name_display($_) => $_ ] } @{ $c->{ra_set_ids} } ],
							id => 'selectedSet', class => 'form-select', size => 10, multiple => undef, dir => 'ltr' =%>
					</div>
					<div class="col-sm-6 mt-sm-5">
						<div class="form-check">
							<label class="form-check-label">
								% param('padFields', 1) unless param('returning');
								<%= check_box padFields => 1, class => 'form-check-input' =%>
								<%= maketext('Pad fields') =%>
							</label>
						</div>
						<div class="form-check">
							<label class="form-check-label">
								% param('includePercentEachSet', 1) unless param('returning');
								<%= check_box includePercentEachSet => 1, class => 'form-check-input' =%>
								<%= maketext('Include percentage columns') =%>
							</label>
						</div>
						<div class="form-check">
							<label class="form-check-label">
								<%= check_box includeIndex => 1, class => 'form-check-input' =%>
								<%= maketext('Include success index columns') =%>
							</label>
						</div>
						<div class="form-check">
							<label class="form-check-label">
								<%= check_box recordSingleSetScores => 1, class => 'form-check-input' =%>
								<%= maketext('Record scores for each set') =%>
							</label>
						</div>
					</div>
				</div>
				<div class="d-flex flex-sm-nowrap flex-wrap">
					<%= submit_button maketext('Score selected set(s) and save to:'), name => 'score-sets',
						id => 'score-sets', class => 'btn btn-primary btn-sm me-2 mb-sm-0 mb-2' =%>
					<%= text_field scoringFileName => $c->{scoringFileName}, class => 'form-control form-control-sm',
						size => '40', 'aria-labelledby' => 'score-sets' =%>
				</div>
			<% end =%>
		</div>
	</div>
</div>
%
% my @selected = param('selectedSet');
% if (@selected) {
	<p class="mt-2"><%= maketext('All of these files will also be made available for mail merge.') %></p>
	<dl>
	% for my $setID (@selected) {
		% my @validFiles;
		% for my $type ('scr', 'ful') {
			% my $filename = "s$setID$type.csv";
			% my $path     = "$scoringDir/$filename";
			% push @validFiles, $filename if -f $path;
		% }
		% if (@validFiles) {
			<dt dir="ltr"><%= format_set_name_display($setID) %></dt>
			<dd>
				<ul>
				% for my $filename (@validFiles) {
					<li>
						<%= link_to $filename =>
							$c->systemLink(url_for('instructor_scoring_download'), params => { getFile => $filename }) =%>
					</li>
				% }
				</ul>
			</dd>
		% }
	</dl>
	% }
% }
%
% if (-f "$scoringDir/$c->{scoringFileName}") {
	<h2 class="my-2"><%= maketext('Scores') %></h2>
	<%= maketext("Download: ") %>
	<%= link_to $c->{scoringFileName} =>
		$c->systemLink(url_for('instructor_scoring_download'), params => { getFile => $c->{scoringFileName} }),
		class => 'font-monospace' =%>
	<pre class="mt-2 bg-light border" style="font-size:smaller; width:fit-content; max-width:100%;">
		<%== readFile("$scoringDir/$c->{scoringFileName}") =%>\
	</pre>
% }
